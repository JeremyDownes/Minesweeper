{"version":3,"sources":["Components/Input/Input.js","Components/Controls/Controls.js","Components/Square/Square.js","Components/Board/Board.js","Utils/minesweeper.js","Components/Flag/Flag.js","Components/Game/Game.js","App.js","registerServiceWorker.js","index.js"],"names":["Input","props","handleChange","bind","e","input","target","value","undefined","this","onChange","field","React","Component","Controls","state","updateState","startGame","number","update","setState","Bombs","Columns","Rows","points","onClick","Square","position","handleClick","drop","fontSize","board","playerBoard","alert","preventDefault","handleDrop","length","style","border","content","overflow","className","onDragOver","allowDrop","onDrop","children","Board","x","y","gridTemplateColumns","repeat","gridTemplateRows","iRow","iColumn","map","row","square","Minesweeper","numberOfRows","numberOfColumns","numberOfBombs","_numberOfBombs","_numberOfTiles","_playerBoard","generatePlayerBoard","_bombBoard","generateBombBoard","rowIndex","columnIndex","getNumberOfNeighborBombs","forEach","offset","neighborRowIndex","neighborColumnIndex","push","numberOfBombsPlaced","randomRowIndex","Math","floor","random","randomColumnIndex","Flag","handleDrag","dragStart","id","draggable","onDrag","Game","game","gameVars","playMove","flagDrag","checkFlagged","neighborOffsets","magnitude","flagId","flagged","newGame","i","document","getElementById","insertAdjacentElement","error","window","location","reload","hasSafeTiles","fX","fY","flipTile","upgrade","Number","clear","isFlagged","Object","values","flag","String","flags","bombs","height","bottom","generateFlagArray","App","render","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"iZA0BeA,G,wDAtBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFF,E,yDAKNC,GACZ,IAAIC,EAAQD,EAAEE,OAAOC,OAClBF,EAAQ,GAAe,KAAVA,KACD,KAAVA,IACHA,OAAQG,GAETC,KAAKR,MAAMS,SAASD,KAAKR,MAAMU,MAAMN,M,+BAKtC,OACC,2BAAOK,SAAUD,KAAKP,mB,GAlBLU,IAAMC,YCqCXC,G,wDAnCd,WAAYb,GAAQ,IAAD,8BAChB,cAAMA,IACFc,MAAQ,GACb,EAAKC,YAAc,EAAKA,YAAYb,KAAjB,gBACnB,EAAKc,UAAY,EAAKA,UAAUd,KAAf,gBAJA,E,wDAONQ,EAAMO,GACjB,IAAIC,EAASV,KAAKM,MACnBI,EAAOR,GAASO,EACfT,KAAKW,SAASD,K,kCAITV,KAAKM,MAAMM,MAAQZ,KAAKM,MAAMO,QAAUb,KAAKM,MAAMQ,MAClDd,KAAKM,MAAMQ,MAAQd,KAAKM,MAAMO,SAAWb,KAAKM,MAAMM,OACtDZ,KAAKR,MAAMgB,UAAUR,KAAKM,S,+BAM/B,OACC,4BACK,qCAAU,8BAAON,KAAKR,MAAMuB,SAChC,mCAAQ,kBAAC,EAAD,CAAOb,MAAM,OAAOD,SAAUD,KAAKO,eAC3C,sCAAW,kBAAC,EAAD,CAAOL,MAAM,UAAUD,SAAUD,KAAKO,eACjD,oCAAS,kBAAC,EAAD,CAAOL,MAAM,QAAQD,SAAUD,KAAKO,eACzC,mCAAQ,4BAAQS,QAAShB,KAAKQ,kB,GA7BfL,IAAMC,YC8Cda,G,wDA9Cd,WAAYzB,GAAQ,IAAD,8BAClB,cAAMA,IACD0B,SAAW,EAAK1B,MAAM0B,SAC3B,EAAKC,YAAc,EAAKA,YAAYzB,KAAjB,gBACnB,EAAK0B,KAAO,EAAKA,KAAK1B,KAAV,gBACZ,EAAK2B,SAAW,OALE,E,wDAQP1B,GACXK,KAAKR,MAAM2B,YAAYnB,KAAKR,MAAM0B,SAAS,GAAGlB,KAAKR,MAAM0B,SAAS,IACO,MAArElB,KAAKR,MAAM8B,MAAMC,YAAYvB,KAAKkB,SAAS,IAAIlB,KAAKkB,SAAS,KAChEM,MAAM,a,gCAIE7B,GACTA,EAAE8B,mB,2BAGE9B,GACJK,KAAKR,MAAMkC,WAAW/B,EAAEK,KAAKkB,Y,+BAK1BlB,KAAKR,MAAM8B,MAAMC,YAAY,GAAGI,OAAS,GAAK3B,KAAKqB,SAAW,OAAcrB,KAAKqB,SAAW,OAC/FrB,KAAK4B,MAAQ,CAACC,OAAS,EAAE7B,KAAKR,MAAM8B,MAAMC,YAAYI,OAAQ,EAAE,YAAaN,SAAUrB,KAAKqB,UAC5F,IAAIS,EAAU9B,KAAKR,MAAM8B,MAAMC,YAAYvB,KAAKkB,SAAS,IAAIlB,KAAKkB,SAAS,IAK3E,MAJe,MAAZY,IACF9B,KAAK4B,MAAQ,CAACC,OAAQ,qBAAsBE,SAAU,SAAUV,SAAUrB,KAAKqB,WAI9E,4BAAQW,UAAU,SACjBhB,QAAShB,KAAKmB,YACfc,WAAYjC,KAAKkC,UACjBC,OAAQnC,KAAKoB,KACbQ,MAAO5B,KAAK4B,OAEVE,EACA9B,KAAKR,MAAM4C,c,GAzCIjC,IAAMC,YCsCZiC,G,wDApCd,WAAY7C,GAAQ,IAAD,8BAClB,cAAMA,IACD2B,YAAc,EAAKA,YAAYzB,KAAjB,gBAFD,E,wDAMP4C,EAAEC,GACbvC,KAAKR,MAAM2B,YAAYmB,EAAEC,K,+BAGhB,IAAD,OACJX,EAAQ,CACVY,oBAAqB,OAAOC,OAAOzC,KAAKR,MAAM8B,MAAMC,YAAY,GAAGI,QAClEe,iBAAkB,OAAOD,OAAOzC,KAAKR,MAAM8B,MAAMC,YAAYI,SAE5DgB,GAAQ,EACRC,GAAU,EAEd,OACC,yBAAKZ,UAAU,QAAQJ,MAAOA,GAG5B5B,KAAKR,MAAM8B,MAAMC,YAAYsB,KAAI,SAAAC,GAEhC,OADAH,IACOG,EAAID,KAAI,SAAAE,GAGd,OAFAH,IACAA,GAAgB,EAAKpD,MAAM8B,MAAMC,YAAY,GAAGI,OACzC,kBAAC,EAAD,CAAQL,MAAO,EAAK9B,MAAM8B,MAAOJ,SAAU,CAACyB,EAAKC,GAAUzB,YAAa,EAAKA,YAAaO,WAAY,EAAKlC,MAAMkC,wB,GA5B3GvB,IAAMC,YCiFX4C,EArFf,WACC,WAAYC,EAAaC,EAAgBC,GAAe,oBACvDnD,KAAKoD,eAAiBD,EACtBnD,KAAKqD,eAAiBJ,EAAeC,EACrClD,KAAKsD,aAAeN,EAAYO,oBAAoBN,EAAaC,GACjElD,KAAKwD,WAAaR,EAAYS,kBAAkBR,EAAaC,EAAgBC,GAL/E,qDAgBUO,EAAUC,GAC4B,MAA3C3D,KAAKsD,aAAaI,GAAUC,IAGqB,MAAzC3D,KAAKwD,WAAWE,GAAUC,GACpC3D,KAAKsD,aAAaI,GAAUC,GAAe,IAE3C3D,KAAKsD,aAAaI,GAAUC,GAAe3D,KAAK4D,yBAAyBF,EAASC,GAEnF3D,KAAKqD,kBAPJ7B,MAAM,yCAlBT,+CA4B2BkC,EAASC,GAAc,IAAD,OAEzCV,EAAejD,KAAKwD,WAAW7B,OAC/BuB,EAAkBlD,KAAKwD,WAAW,GAAG7B,OACvCwB,EAAgB,EAUpB,MAbwB,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAI5DU,SAAQ,SAAAC,GACvB,IAAMC,EAAmBL,EAAWI,EAAO,GACrCE,EAAsBL,EAAcG,EAAO,GAC9CC,GAAoB,GAAKA,EAAmBd,GAAgBe,GAAuB,GAAKA,EAAsBd,GACnD,MAAzD,EAAKM,WAAWO,GAAkBC,IACrCb,OAIIA,IA1CT,kCASE,OAAOnD,KAAKsD,eATd,gCAaE,OAAOtD,KAAKwD,aAbd,mCA8CE,OAAQxD,KAAKqD,eAAerD,KAAKoD,kBA9CnC,2CAiD4BH,EAAaC,GAEvC,IADA,IAAI5B,EAAQ,GACHoC,EAAW,EAAGA,EAAWT,EAAcS,IAAY,CAE3D,IADA,IAAIZ,EAAM,GACDa,EAAc,EAAGA,EAAcT,EAAiBS,IACxDb,EAAImB,KAAK,KAEV3C,EAAM2C,KAAKnB,GAEZ,OAAOxB,IA1DT,wCA6D2B2B,EAAaC,EAAgBC,GAEtD,IADA,IAAI7B,EAAQ,GACHoC,EAAW,EAAGA,EAAWT,EAAcS,IAAY,CAE3D,IADA,IAAIZ,EAAM,GACDa,EAAc,EAAGA,EAAcT,EAAiBS,IACxDb,EAAImB,KAAK,MAEV3C,EAAM2C,KAAKnB,GAKX,IAFC,IAAIoB,EAAsB,EAEpBA,EAAsBf,GAAe,CAC1C,IAAIgB,EAAiBC,KAAKC,MAAMD,KAAKE,SAAWrB,GAC7CsB,EAAoBH,KAAKC,MAAMD,KAAKE,SAAWpB,GACF,MAA7C5B,EAAM6C,GAAgBI,KACzBjD,EAAM6C,GAAgBI,GAAqB,IAC3CL,KAGF,OAAO5C,MAjFV,KCoBekD,G,wDAjBd,WAAYhF,GAAQ,IAAD,8BAClB,cAAMA,IACDiF,WAAa,EAAKA,WAAW/E,KAAhB,gBAFA,E,uDAKRC,GACVK,KAAKR,MAAMkF,UAAU/E,EAAEE,OAAO8E,M,+BAK9B,OACE,4BAAQC,UAAU,OAAOC,OAAQ7E,KAAKyE,WAAYE,GAAI3E,KAAKR,MAAMmF,IAAjE,c,GAbexE,IAAMC,YCkIV0E,E,kDA7Hd,WAAYtF,GAAQ,IAAD,8BAClB,cAAMA,IACDc,MAAQ,CAACyE,KAAM,IAAI/B,EAAY,EAAE,EAAE,GAAIgC,SAAU,CAAClE,KAAM,EAAGD,QAAS,EAAGD,MAAO,IACnF,EAAKJ,UAAY,EAAKA,UAAUd,KAAf,gBACjB,EAAKuF,SAAW,EAAKA,SAASvF,KAAd,gBAChB,EAAKgC,WAAa,EAAKA,WAAWhC,KAAhB,gBAClB,EAAKwF,SAAW,EAAKA,SAASxF,KAAd,gBAChB,EAAKyF,aAAe,EAAKA,aAAazF,KAAlB,gBACpB,EAAK0F,gBAAkB,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAC3E,EAAKrE,OAAS,EACd,EAAKsE,UAAY,EAAK/E,MAAMyE,KAAKxD,YAAYI,OAAS,EAAKrB,MAAMyE,KAAKxD,YAAY,GAAGI,OAAS,EAAKrB,MAAMyE,KAAK3B,eAC9G,EAAKkC,OAAS,KACd,EAAKC,QAAU,GAZG,E,6LAeH7E,E,+BAASV,KAAKM,MAAM0E,S,SACf,IAAIhC,EAAYtC,EAAOI,KAAKJ,EAAOG,QAAQH,EAAOE,O,OAAlE4E,E,OACHxF,KAAKwF,QAAQA,EAAS9E,G,oIAIhBqE,EAAMrE,GACbV,KAAKqF,UAAYrF,KAAKM,MAAMyE,KAAKxD,YAAYI,OAAS3B,KAAKM,MAAMyE,KAAKxD,YAAY,GAAGI,OAAS3B,KAAKM,MAAMyE,KAAK3B,eAC9G,IAAI,IAAIqC,EAAE,EAAGA,EAAEzF,KAAKM,MAAM0E,SAASpE,MAAO6E,IACtCC,SAASC,eAAeF,IAC1BC,SAASC,eAAe,QAAQC,sBAAsB,YAAYF,SAASC,eAAeF,IAG5FzF,KAAKuF,QAAU,GACf,IACCvF,KAAKW,SAAS,CAACoE,KAAMA,EAAMC,SAAUtE,IACpC,MAAMmF,GACPC,OAAOC,SAASC,Y,4BAIZ1D,EAAEC,GAAI,IAAD,OACVvC,KAAKoF,gBAAgBvB,SAAQ,SAAAC,GAC5B,GAAqC,IAAjC,EAAKxD,MAAMyE,KAAKkB,aAApB,CAGA,IAAIC,EAAKpC,EAAO,GAAGxB,EACf6D,EAAKrC,EAAO,GAAGvB,EAChB2D,GAAM,GAAKC,GAAM,GAAKD,EAAK,EAAK5F,MAAMyE,KAAKxD,YAAYI,QAAUwE,EAAK,EAAK7F,MAAMyE,KAAKxD,YAAY,GAAGI,QAC5D,MAAxC,EAAKrB,MAAMyE,KAAKxD,YAAY2E,GAAIC,IAClC,EAAKlB,SAASiB,EAAGC,S,+BAOZ7D,EAAEC,GACV,IAAIvC,KAAKmF,aAAa7C,EAAEC,GAAI,CAE3B,GADAvC,KAAKM,MAAMyE,KAAKqB,SAAS9D,EAAEC,GACc,MAAtCvC,KAAKM,MAAMyE,KAAKxD,YAAYe,GAAGC,GAGjC,OAFAvC,KAAKe,QAASf,KAAKqF,eACnBrF,KAAKQ,YAKN,GAFCR,KAAKe,SAE+B,IAAjCf,KAAKM,MAAMyE,KAAKkB,aAAoB,CACtC,IAAII,EAAU,CAACvF,KAAMwF,OAAOtG,KAAKM,MAAM0E,SAASlE,MAAQ,EAAGD,QAASyF,OAAOtG,KAAKM,MAAM0E,SAASnE,SAAW,EAAGD,MAAO0F,OAAOtG,KAAKM,MAAM0E,SAASpE,OAAS,GAIzJ,OAHAY,MAAM,cACNxB,KAAKe,QAASf,KAAKqF,eACnBrF,KAAKQ,UAAU6F,GAGyB,IAAtCrG,KAAKM,MAAMyE,KAAKxD,YAAYe,GAAGC,KACjCvC,KAAKM,MAAMyE,KAAKxD,YAAYe,GAAGC,GAAK,GACpCvC,KAAKuG,MAAMjE,EAAEC,IAEd,IAAIwC,EAAO/E,KAAKM,MAAMyE,KACtB/E,KAAKW,SAAS,CAACoE,KAAMA,O,mCAIVzC,EAAEC,GACd,IAAIiE,GAAY,EACZtF,EAAW,CAACoB,EAAEC,GAMlB,OALAkE,OAAOC,OAAO1G,KAAKuF,SAAS1B,SAAQ,SAAA8C,GAChCC,OAAOD,KAAUC,OAAO1F,KAC1BsF,GAAY,MAGPA,I,+BAGC7B,GACP3E,KAAKsF,OAASX,I,iCAGLhF,EAAEoG,GACZ/F,KAAKuF,QAAQvF,KAAKsF,QAAUS,EAC5BpG,EAAEE,OAAO+F,sBAAsB,YAAYF,SAASC,eAAe3F,KAAKsF,W,gCAG/D3F,GACTA,EAAE8B,mB,0CAKE,IADJ,IAAIoF,EAAQ,GACAvE,EAAI,EAAGA,EAAItC,KAAKM,MAAM0E,SAASpE,MAAO0B,IAC7CuE,EAAM5C,KAAK,kBAAC,EAAD,CAAMS,UAAW1E,KAAKkF,SAAUP,GAAIrC,KAEjD,OAAOuE,I,+BAIV,OACC,6BACC,kBAAC,EAAD,CAAUrG,UAAWR,KAAKQ,UAAWO,OAAUf,KAAKe,OAAQ2D,UAAW1E,KAAKkF,SAAU4B,MAAO9G,KAAKM,MAAM0E,SAASpE,QACjH,yBAAKqB,WAAYjC,KAAKkC,UAAWC,OAAQnC,KAAK0B,WAAYE,MAAO,CAACmF,OAAQ,SAAS7F,SAAU,WAAY8F,OAAQ,SAAUrC,GAAG,QAE5H3E,KAAKiH,qBAGP,kBAAC,EAAD,CAAO9F,YAAanB,KAAKiF,SAAU3D,MAAOtB,KAAKM,MAAMyE,KAAMvE,UAAWR,KAAKQ,UAAWkB,WAAY1B,KAAK0B,kB,GAxHxFvB,IAAMC,WCQV8G,G,6KARX,OACE,yBAAKlF,UAAU,OACb,kBAAC,EAAD,CAAM/B,SAAYD,KAAKmH,c,GAJb/G,cCMZgH,EAAcC,QACW,cAA7BvB,OAAOC,SAASuB,UAEe,UAA7BxB,OAAOC,SAASuB,UAEhBxB,OAAOC,SAASuB,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1H,QACfoH,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAzC,GACLuC,QAAQvC,MAAM,4CAA6CA,MChEjE0C,IAASpB,OAAO,kBAAC,EAAD,MAASzB,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmB+B,UAAW,CAGzE,GADkB,IAAIc,IAAIC,eAAwB3C,OAAOC,UAC3C2C,SAAW5C,OAAOC,SAAS2C,OAIvC,OAGF5C,OAAO6C,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMgB,eAAN,sBAEPrB,EAwCV,SAAiCK,GAE/BmB,MAAMnB,GACHI,MAAK,SAAAgB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7B/B,OAAOC,SAASC,eAKpBwB,EAAgBC,MAGnBa,OAAM,WACLF,QAAQC,IACN,oEA5DAe,CAAwB3B,GAGxBD,EAAgBC,OChCxB4B,K","file":"static/js/main.997801ff.chunk.js","sourcesContent":["import React from 'react'\r\nimport './input.css'\r\n\r\nclass Input extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tlet input = e.target.value;\r\n\t\tif(input > 0 || input === '') {    //  react is great in that you can just validate your forms in inline like this. We don't want 0 or any letters but we want a trigger on empty\r\n\t\t\tif (input === '') {\r\n\t\t\t input = undefined\t\t\t\t\t\t\t\t// an empty string should trigger false in Controls so we update Controls state to undefined on a deletion event\r\n\t\t\t}\r\n\t\t\tthis.props.onChange(this.props.field,input)\t\t// will update the Controls state of whatever field this is\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input onChange={this.handleChange}/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport Input from '../Input/Input.js'\r\nimport './controls.css'\r\n\r\nclass Controls extends React.Component {\r\n\tconstructor(props) {\r\n    super(props)\r\n  \tthis.state = {}                                  // {Rows: number, Columns: number, Bombs: number}\r\n  \tthis.updateState = this.updateState.bind(this)\r\n  \tthis.startGame = this.startGame.bind(this)\r\n  }\r\n\r\n  updateState(field,number) {\r\n  \tlet update = this.state\r\n\t\tupdate[field] = number\r\n  \tthis.setState(update)\r\n \t}\r\n\r\n  startGame() {\r\n    if (this.state.Bombs < this.state.Columns * this.state.Rows) {\r\n      if(this.state.Rows && this.state.Columns && this.state.Bombs) {       // all defined by a number\r\n      \tthis.props.startGame(this.state)\r\n      }\r\n    }\r\n  }\r\n\r\n\trender() {\t\t\t\r\n\t\treturn (\r\n\t\t\t<ul>\r\n        <li>Points<span>{this.props.points}</span></li>\r\n\t\t\t\t<li>Rows<Input field='Rows' onChange={this.updateState}/></li>\t\t\t\t\t\r\n\t\t\t\t<li>Columns<Input field='Columns' onChange={this.updateState} /></li>\r\n\t\t\t\t<li>Bombs<Input field='Bombs' onChange={this.updateState} /></li>\t\t\t\r\n        <li>Play<button onClick={this.startGame} /></li>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Controls","import React from 'react'\r\nimport './square.css'\r\n\r\nclass Square extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.position = this.props.position;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// a 2d array like [0,0] generated by the Board components render loop \r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t\tthis.drop = this.drop.bind(this)\r\n\t\tthis.fontSize = '2rem'\r\n\t}\r\n\r\n\thandleClick(e) {\r\n\t\tthis.props.handleClick(this.props.position[0],this.props.position[1])\t\t\t\t\t\t\t\t\t\t\t\t\t// this passes the Game component's playMove method the value of the caller which mutates this.props.playerBoard\r\n\t\tif (this.props.board.playerBoard[this.position[0]][this.position[1]] === 'B') {\t\t\t\t\t\t\t\t\t\t// Checks the board to see if it was a bomb\r\n\t\t\talert('BOOM!!!')\r\n\t\t}\r\n\t}\r\n\r\n\tallowDrop(e) {\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tdrop(e) {\r\n\t\tthis.props.handleDrop(e,this.position)\r\n\t}\r\n\r\n\t\t\t\t\t\t// below we render a button with a value equal to its index that will be recalled on click. Button will display content at the index of playerBoard\r\n\trender() {\r\n\t\tif(this.props.board.playerBoard[0].length > 17) {this.fontSize = '1rem'} else {this.fontSize = '2rem'}\r\n\t\tthis.style = {border: (1/this.props.board.playerBoard.length)*9+'vw outset', fontSize: this.fontSize};\r\n\t\tlet content = this.props.board.playerBoard[this.position[0]][this.position[1]]\r\n\t\tif(content !== ' ') {\r\n\t\t\tthis.style = {border: '1px solid darkgray',\toverflow: 'hidden', fontSize: this.fontSize}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t  <button className='square' \r\n\t\t  \tonClick={this.handleClick} \r\n\t\t\t\tonDragOver={this.allowDrop}\r\n\t\t\t\tonDrop={this.drop}\r\n\t\t\t\tstyle={this.style}\r\n\t\t\t>\r\n\t  \t\t{content}\r\n\t  \t\t{this.props.children}\r\n\t\t  </button>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport Square from '../Square/Square'\r\nimport './board.css'\r\n\r\nclass Board extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\r\n\t}\r\n\r\n\thandleClick(x,y) {\r\n\t\tthis.props.handleClick(x,y);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // passes the event from a square to the game\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet style = {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//  Dynamic style\r\n\t\t  gridTemplateColumns: '1fr '.repeat(this.props.board.playerBoard[0].length),\t\t//  Adding another fraction of screen for every item column in our playerBoard array\t\r\n \t\t  gridTemplateRows: '1fr '.repeat(this.props.board.playerBoard.length)\t\t\t\t\t//  Doing the same for every row\r\n\t\t};\r\n\t\tlet iRow = -1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// I itterate first thing and it's index values so itterators to -1\r\n\t\tlet iColumn =-1\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\treturn (\r\n\t\t\t<div className='board' style={style}>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.board.playerBoard.map(row=> {\r\n\t\t\t\t\t\tiRow++\r\n\t\t\t\t\t\treturn row.map(square=> {\r\n\t\t\t\t\t\t\tiColumn++\r\n\t\t\t\t\t\t\tiColumn=iColumn%this.props.board.playerBoard[0].length;\r\n\t\t\t\t\t\t\treturn <Square board={this.props.board} position={[iRow,iColumn]} handleClick={this.handleClick} handleDrop={this.props.handleDrop}/> \r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Board;\r\n/*\r\n\t\treturn (\r\n\t\t\t<div className='board' style={style}>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // applies our dynamic style dividing our veiwport grid up like we want\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.board.playerBoard.map(row=> {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Start the loop for each row\r\n\t\t\t\t\t\tiRow++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// itterate up to (0,-1)\r\n\t\t\t\t\t\treturn row.map(square=> {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Start the loop for each column within the row\r\n\t\t\t\t\t\t\tiColumn++;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// itterate up to (0,0)\r\n\t\t\t\t\t\t\tiColumn=iColumn%this.props.board.playerBoard[0].length;\t\t\t\t\t\t\t\t// mod by length sets our count back to 0 when it hits the length\t\r\n\t\t\t\t\t\t\treturn <Square board={this.props.board} position={[iRow,iColumn]} handleClick={this.handleClick} /> ;  //we render a square with a reference to the game board it's position and a reference to an event handler\r\n\t\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\t\t// the squares render nicely into a grid based on the array dimensions\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t*/","export class Minesweeper {\r\n\tconstructor(numberOfRows,numberOfColumns,numberOfBombs){\r\n\t\tthis._numberOfBombs = numberOfBombs;\r\n\t\tthis._numberOfTiles = numberOfRows * numberOfColumns;\r\n\t\tthis._playerBoard = Minesweeper.generatePlayerBoard(numberOfRows,numberOfColumns)\r\n\t\tthis._bombBoard = Minesweeper.generateBombBoard(numberOfRows,numberOfColumns,numberOfBombs)\r\n\t}\r\n\r\n\tget playerBoard() {\r\n\t\treturn this._playerBoard\r\n\t}\r\n\r\n\tget bombBoard() {\r\n\t\treturn this._bombBoard\r\n\t}\t\r\n\r\n\tflipTile(rowIndex, columnIndex) {\r\n\t\tif(this._playerBoard[rowIndex][columnIndex]!==\" \") {\r\n\t\t\talert(\"This tile has already been flipped!\")\r\n\t\t\treturn;\r\n\t\t} else if (this._bombBoard[rowIndex][columnIndex]===\"B\") {\r\n\t\t\tthis._playerBoard[rowIndex][columnIndex] = \"B\";\r\n\t\t} else {\r\n\t\t\tthis._playerBoard[rowIndex][columnIndex] = this.getNumberOfNeighborBombs(rowIndex,columnIndex);\r\n\t\t}\r\n\t\tthis._numberOfTiles--\r\n  }\r\n\r\n  getNumberOfNeighborBombs(rowIndex,columnIndex) {\r\n\t\tconst neighborOffsets = [[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]]\r\n\t\tconst numberOfRows = this._bombBoard.length\r\n\t\tconst numberOfColumns = this._bombBoard[0].length\r\n\t\tlet numberOfBombs = 0\r\n\t\tneighborOffsets.forEach(offset => {\r\n\t\t\tconst neighborRowIndex = rowIndex + offset[0]\r\n\t\t\tconst neighborColumnIndex = columnIndex + offset[1]\r\n\t\t\tif(neighborRowIndex >= 0 && neighborRowIndex < numberOfRows && neighborColumnIndex >= 0 && neighborColumnIndex < numberOfColumns) {\r\n\t\t\t\tif (this._bombBoard[neighborRowIndex][neighborColumnIndex]===\"B\") {\r\n\t\t\t\t\tnumberOfBombs++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn numberOfBombs\r\n\t}\r\n\r\n\tget hasSafeTiles() {\r\n\t\treturn (this._numberOfTiles-this._numberOfBombs) \r\n\t} \r\n\r\n\tstatic generatePlayerBoard(numberOfRows,numberOfColumns) {\r\n\t\tlet board = []\r\n\t\tfor (let rowIndex = 0; rowIndex < numberOfRows; rowIndex++) {\r\n\t\t\tlet row = []\r\n\t\t\tfor (let columnIndex = 0; columnIndex < numberOfColumns; columnIndex++) {\r\n\t\t\t\trow.push(\" \")\r\n\t\t\t}\r\n\t\t\tboard.push(row)\r\n\t\t}\r\n\t\treturn board\r\n\t}\r\n\r\n\tstatic generateBombBoard (numberOfRows,numberOfColumns,numberOfBombs) {\r\n\t\tlet board = []\r\n\t\tfor (let rowIndex = 0; rowIndex < numberOfRows; rowIndex++) {\r\n\t\t\tlet row = []\r\n\t\t\tfor (let columnIndex = 0; columnIndex < numberOfColumns; columnIndex++) {\r\n\t\t\t\trow.push(null)\r\n\t\t\t}\r\n\t\t\tboard.push(row)\r\n\t\t}\r\n\t\t\r\n \t  let numberOfBombsPlaced = 0\r\n\r\n\t  while (numberOfBombsPlaced < numberOfBombs) {\r\n\t \t \tlet randomRowIndex = Math.floor(Math.random() * numberOfRows)\r\n\t  \tlet randomColumnIndex = Math.floor(Math.random() * numberOfColumns)\r\n\t  \tif (board[randomRowIndex][randomColumnIndex] !== \"B\") {\r\n\t\t  \tboard[randomRowIndex][randomColumnIndex] = \"B\"\r\n\t  \t\tnumberOfBombsPlaced++\r\n\t  \t}\r\n\t  }\r\n\t  return board\r\n\t}\t\r\n}\r\n\r\nexport default Minesweeper","import React from 'react'\r\nimport './flag.css'\r\nclass Flag extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleDrag = this.handleDrag.bind(this)\r\n\t}\r\n\r\n\thandleDrag(e) {\r\n\t\tthis.props.dragStart(e.target.id)\r\n\t}\r\n\r\n\trender() \r\n\t{\r\n\t\treturn (\r\n\t\t\t\t<figure draggable=\"true\" onDrag={this.handleDrag} id={this.props.id}>⚑</figure>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Flag","import React from 'react'\r\nimport Controls from '../Controls/Controls'\r\nimport Board from '../Board/Board'\r\nimport Minesweeper from '../../Utils/minesweeper.js'\r\nimport Flag from '../Flag/Flag'\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {game: new Minesweeper(3,3,1), gameVars: {Rows: 3, Columns: 3, Bombs: 1}}\t\t\t\t\t// When the game is constructed we initiate a new game so we have something to render\r\n\t\tthis.startGame = this.startGame.bind(this)\r\n\t\tthis.playMove = this.playMove.bind(this)\r\n\t\tthis.handleDrop = this.handleDrop.bind(this)\r\n\t\tthis.flagDrag = this.flagDrag.bind(this)\r\n\t\tthis.checkFlagged = this.checkFlagged.bind(this)\r\n\t\tthis.neighborOffsets = [[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]]\r\n\t\tthis.points = 0;\r\n\t\tthis.magnitude = this.state.game.playerBoard.length * this.state.game.playerBoard[0].length * this.state.game._numberOfBombs\r\n\t\tthis.flagId = null\r\n\t\tthis.flagged = {}\r\n\t}\r\n\r\n\tasync startGame(update = this.state.gameVars) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// async to make sure we have the new game object before setting state \r\n\t\tlet newGame = await new Minesweeper(update.Rows,update.Columns,update.Bombs)   // The update object is passed in from the Controls component\r\n\t\t\tthis.newGame(newGame, update)\r\n\t\t\r\n\t}\r\n\r\n\tnewGame(game, update) {\r\n\t\tthis.magnitude = this.state.game.playerBoard.length * this.state.game.playerBoard[0].length * this.state.game._numberOfBombs\r\n\t\tfor(let i=0; i<this.state.gameVars.Bombs; i++) {\r\n\t\t\tif(document.getElementById(i)) {\r\n\t\t\t\tdocument.getElementById('base').insertAdjacentElement('beforeend',document.getElementById(i))\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.flagged = {}\r\n\t\ttry {\r\n\t\t\tthis.setState({game: game, gameVars: update});\r\n\t\t} catch(error) {\r\n\t\t\twindow.location.reload()\r\n\t\t}\r\n\t}\r\n\r\n\tclear(x,y) {\t\r\n\t\tthis.neighborOffsets.forEach(offset=> {\r\n\t\t\tif (this.state.game.hasSafeTiles === 0) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tlet fX = offset[0]+x\r\n\t\t\tlet fY = offset[1]+y\r\n\t\t\tif(fX >= 0 && fY >= 0 && fX < this.state.game.playerBoard.length && fY < this.state.game.playerBoard[0].length) {\r\n\t\t\t\tif(this.state.game.playerBoard[fX][fY] === ' ') {\r\n\t\t\t\t\tthis.playMove(fX,fY)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t})\r\n\t}\r\n\r\n\tplayMove(x,y) {\r\n\t\tif(!this.checkFlagged(x,y)) {\r\n\t\t\tthis.state.game.flipTile(x,y) // we are flipping tiles of the current minesweeper instance with values passed in from the Board component \r\n\t\t\tif(this.state.game.playerBoard[x][y] === 'B') {\r\n\t\t\t\tthis.points-= this.magnitude\r\n\t\t\t\tthis.startGame()\r\n\t\t\t\treturn\r\n\t\t\t} else { \r\n\t\t\t\tthis.points++\r\n\t\t\t}\r\n\t\t\tif (this.state.game.hasSafeTiles === 0) {\r\n\t\t\t  let upgrade = {Rows: Number(this.state.gameVars.Rows) + 1, Columns: Number(this.state.gameVars.Columns) + 1, Bombs: Number(this.state.gameVars.Bombs) + 1}\r\n\t\t\t\talert(\"You Win!!!\")\r\n\t\t\t\tthis.points+= this.magnitude\r\n\t\t\t\tthis.startGame(upgrade)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif(this.state.game.playerBoard[x][y] === 0) {\r\n\t\t\t\tthis.state.game.playerBoard[x][y] = ''\r\n\t\t\t\tthis.clear(x,y);\r\n\t\t\t}\r\n\t\t\tlet game = this.state.game\r\n\t\t\tthis.setState({game: game})\r\n\t\t}\r\n\t}\r\n\r\n\tcheckFlagged(x,y) {\r\n\t\tlet isFlagged = false\r\n\t\tlet position = [x,y]\r\n\t\tObject.values(this.flagged).forEach(flag=> {\r\n\t\t\tif(String(flag) === String(position)) {\r\n\t\t\t\tisFlagged = true\r\n\t\t\t} \r\n\t\t})\r\n\t\treturn isFlagged\r\n\t}\r\n\r\n\tflagDrag(id) {\r\n\t\t\tthis.flagId = id\r\n\t}\r\n\r\n\thandleDrop(e,location) {\r\n\t\tthis.flagged[this.flagId] = location\r\n\t\te.target.insertAdjacentElement('beforeend',document.getElementById(this.flagId))\r\n\t}\r\n\r\n\tallowDrop(e) {\r\n\t\te.preventDefault()\r\n\t}\r\n \r\n\tgenerateFlagArray() {\r\n\t\tlet flags = []\r\n\t\t\t\t\t\tfor(let x = 0; x < this.state.gameVars.Bombs; x++) {\r\n\t\t\t\t\t\t\tflags.push(<Flag dragStart={this.flagDrag} id={x}/>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\treturn flags\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Controls startGame={this.startGame} points = {this.points} dragStart={this.flagDrag} bombs={this.state.gameVars.Bombs}/>\r\n\t\t\t\t<div onDragOver={this.allowDrop} onDrop={this.handleDrop} style={{height: '.75rem',position: 'relative', bottom: '.3rem'}} id='base'>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.generateFlagArray()\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Board handleClick={this.playMove} board={this.state.game} startGame={this.startGame} handleDrop={this.handleDrop}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Game;","import React, { Component } from 'react'\r\nimport Game from './Components/Game/Game'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Game onChange = {this.render}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}